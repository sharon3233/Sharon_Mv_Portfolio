[{"C:\\Users\\kindlsh\\Documents\\Projects\\code-linguists-chore-bot\\chore-bot\\src\\index.js":"1","C:\\Users\\kindlsh\\Documents\\Projects\\code-linguists-chore-bot\\chore-bot\\src\\App.js":"2","C:\\Users\\kindlsh\\Documents\\Projects\\code-linguists-chore-bot\\chore-bot\\src\\data.js":"3","C:\\Users\\kindlsh\\Documents\\Projects\\code-linguists-chore-bot\\chore-bot\\src\\List.js":"4","C:\\Users\\kindlsh\\Documents\\Projects\\Sharon_Portfolio_MV\\misc\\Verizon-Hackathon-Chore-Reminder\\src\\index.js":"5","C:\\Users\\kindlsh\\Documents\\Projects\\Sharon_Portfolio_MV\\misc\\Verizon-Hackathon-Chore-Reminder\\src\\App.js":"6","C:\\Users\\kindlsh\\Documents\\Projects\\Sharon_Portfolio_MV\\misc\\Verizon-Hackathon-Chore-Reminder\\src\\data.js":"7","C:\\Users\\kindlsh\\Documents\\Projects\\Sharon_Portfolio_MV\\misc\\Verizon-Hackathon-Chore-Reminder\\src\\List.js":"8"},{"size":244,"mtime":1638975049971,"results":"9","hashOfConfig":"10"},{"size":6671,"mtime":1639004582185,"results":"11","hashOfConfig":"10"},{"size":1092,"mtime":1639004582188,"results":"12","hashOfConfig":"10"},{"size":1180,"mtime":1639004582187,"results":"13","hashOfConfig":"10"},{"size":244,"mtime":1638975049971,"results":"14","hashOfConfig":"15"},{"size":6671,"mtime":1639004582185,"results":"16","hashOfConfig":"15"},{"size":1092,"mtime":1639004582188,"results":"17","hashOfConfig":"15"},{"size":1180,"mtime":1639004582187,"results":"18","hashOfConfig":"15"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"dqzvmz",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1idmu69",{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"C:\\Users\\kindlsh\\Documents\\Projects\\code-linguists-chore-bot\\chore-bot\\src\\index.js",[],["39","40"],"C:\\Users\\kindlsh\\Documents\\Projects\\code-linguists-chore-bot\\chore-bot\\src\\App.js",["41","42","43","44"],"C:\\Users\\kindlsh\\Documents\\Projects\\code-linguists-chore-bot\\chore-bot\\src\\data.js",["45"],"C:\\Users\\kindlsh\\Documents\\Projects\\code-linguists-chore-bot\\chore-bot\\src\\List.js",["46"],"C:\\Users\\kindlsh\\Documents\\Projects\\Sharon_Portfolio_MV\\misc\\Verizon-Hackathon-Chore-Reminder\\src\\index.js",[],"C:\\Users\\kindlsh\\Documents\\Projects\\Sharon_Portfolio_MV\\misc\\Verizon-Hackathon-Chore-Reminder\\src\\App.js",["47","48","49","50"],"import React, { useState, useEffect } from \"react\";\r\nimport data from './data';\r\nimport List from './List';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport dingSfx from './sounds/servicebell.mp3';\r\nimport popSfx from './sounds/pop.mp3';\r\n\r\nfunction App()   {\r\n    //States\r\n    const [chores, setChore] = useState(data);\r\n    const [count, setCount] = useState(chores.length);\r\n    const [addChore, setAddChore] = useState(false); \r\n    const sfx = new Audio(dingSfx);\r\n    const sfxPop = new Audio(popSfx);\r\n\r\n    //Toast/Timer\r\n    //timer function to check chore for popup reminder.\r\n    async function checkChoreLoop() {\r\n        //get Date and time\r\n        const today = new Date();\r\n        const time = today.getHours() + \":\" + today.getMinutes() + \":\" + \"00\";\r\n        //2021-12-09 @ 23:00\r\n        const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n        console.log((date+\":\"+time));\r\n        //loop through chore due dates and check for a date time match`\r\n        for(const chore in data){\r\n            //format time and check for match and toast if there is match\r\n            if((time+\" @ \"+date) === data[chore].due){\r\n                //Sound Effect load and play when match found\r\n                sfx.play();\r\n                toast(data[chore].name);\r\n            }\r\n        }\r\n    }\r\n    const testNotifacation = () => {\r\n        sfx.play();\r\n        toast(\"Wash Your Dishes\");\r\n    }\r\n    //set timer interval 60000 = 1min  \r\n    const MINUTE_MS = 10000;\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n          //Call function ever timer interval\r\n            checkChoreLoop();\r\n        }, MINUTE_MS);\r\n        return () => clearInterval(interval); \r\n    }, []);\r\n\r\n      //Download/Load JSON\r\n      //Function to download chores as json file\r\n    function download(content, fileName, contentType) {\r\n        toast(\"Downloading List\");\r\n        sfxPop.play();\r\n        const a = document.createElement(\"a\");\r\n        const file = new Blob([content], {type: contentType});\r\n        a.href = URL.createObjectURL(file);\r\n        a.download = fileName;\r\n        a.click();\r\n    }\r\n    \r\n    //Add Chore\r\n       const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            sfxPop.play();\r\n            setAddChore(false);\r\n            console.log(`the chore entered was ${e.target[0].value}`);\r\n            const choreList = chores;\r\n            let imageUrl = \"../icons/default.png\";\r\n            if(!e.target[3].value == \"\"){\r\n                imageUrl = e.target[3].value;\r\n            }\r\n            choreList.push({\r\n                id: (choreList.length + 1),\r\n                name: e.target[0].value,\r\n                day: \"Not used\",\r\n                status:true,\r\n                image: imageUrl ,\r\n                due:e.target[1].value+\" @ \"+e.target[2].value\r\n            });\r\n            e.target.reset();\r\n        };\r\n\r\n    return (\r\n        <>\r\n            <main>\r\n                <section className=\"container\">\r\n                    <h3 tabIndex=\"0\">{!chores.length ? chores.length: count} Chores Due</h3>\r\n                    <List chores={chores} setCount={setCount}/>\r\n                    <button tabIndex=\"0\" type=\"button\" className=\"add-chore\" data-toggle=\"modal\" data-target=\"#exampleModal\" onClick={() => { setAddChore(!addChore); sfxPop.play(); }}>Add Chore</button>\r\n                    <br/>\r\n                    <button tabIndex=\"0\" className=\"download-chore\" onClick={() => download(JSON.stringify(data), 'chore.json', 'text/plain')}>Download Chore list</button>\r\n                    <img tabIndex=\"0\" id=\"dust\" src=\"Images/dust.gif\" alt=\"pink rabbit dusting gif\"/>\r\n                </section>\r\n\r\n                {/* Bootstrap modal */}\r\n                <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                    <div className=\"modal-dialog\" role=\"document\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\" id=\"exampleModalLabel\">Add a New Chore</h5>\r\n                                <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                    <span aria-hidden=\"true\">&times;</span>\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <form onSubmit={handleSubmit}>  \r\n                                    <div className=\"form-group\" tabIndex =\"0\" aria-label=\"Enter a chore name\">\r\n                                        <input id=\"choreName\" placeholder=\"Chore Name\" type=\"text\" title=\"Chore Name\" required/>\r\n                                    </div>\r\n                                    <div className=\"form-group\" tabIndex =\"0\" aria-label=\"Enter a due Date\">\r\n                                        <input id=\"choreDate\" type=\"date\" title=\"Chore due date\"/>\r\n                                    </div>\r\n                                    <div className=\"form-group\" tabIndex =\"0\" aria-label=\"Enter the time due\">\r\n                                        <input id=\"choreTime\" placeholder=\"HH:00\" required pattern=\"^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$\" title=\"Chore Time: 24 Hour Time Clock\"/>\r\n                                    </div>\r\n                                    <div className=\"form-group\" tabIndex =\"0\" aria-label=\"Enter an Image URL, not required default image will be applied if none is added\">\r\n                                        <input id=\"choreImage\" placeholder=\"http://\" title=\"not required default image will be applied if none is added\"/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <button tabIndex =\"0\" type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                                        <button tabIndex =\"0\" type=\"submit\" className=\"btn btn-warning submit-button\">Add Chore</button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n            <div>\r\n            <button onClick={testNotifacation}>test notifaction</button>\r\n                <ToastContainer />\r\n            </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default App;","C:\\Users\\kindlsh\\Documents\\Projects\\Sharon_Portfolio_MV\\misc\\Verizon-Hackathon-Chore-Reminder\\src\\data.js",["51"],"export default [\r\n    {\r\n        id: 1,\r\n        name: 'Wash Dishes',\r\n        day: 'Sunday',\r\n        status: true,\r\n        image: '../icons/clean-dishes.png',\r\n        due:\"2021-12-09 @ 16:12\"\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Sweep',\r\n        day: 'Saturday',\r\n        status: true,\r\n        image: '../icons/sweep.png',\r\n        due:\"2021-12-09 @ 23:00\"\r\n    },\r\n    {\r\n        id: 3,\r\n        name: 'Dust',\r\n        day: 'Tuesday',\r\n        status: true,\r\n        image: '../icons/dust.png',\r\n        due:\"2021-12-09 @ 23:00\"\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Mop',\r\n        day: 'Saturday',\r\n        status: true,\r\n        image: '../icons/mop.png',\r\n        due:\"2021-12-09 @ 23:00\"\r\n    },\r\n    {\r\n        id: 5,\r\n        name: 'Take out trash',\r\n        day: 'Monday',\r\n        status: true,\r\n        image: '../icons/trash.png',\r\n        due:\"2021-12-09 @ 23:00\"\r\n    },\r\n    {\r\n        id: 6,\r\n        name: 'Laundry',\r\n        day: 'Wednesday',\r\n        status: true,\r\n        image: '../icons/washing.png',\r\n        due:\"2021-12-09 @ 23:00\"\r\n    },\r\n];","C:\\Users\\kindlsh\\Documents\\Projects\\Sharon_Portfolio_MV\\misc\\Verizon-Hackathon-Chore-Reminder\\src\\List.js",["52"],"import React, { useState } from 'react';\r\nimport whooshSfx from './sounds/whoosh.flac';\r\n\r\n\r\nconst List = ({chores, setCount}) => {\r\n  const [choreList, setChoreList] = useState(chores);\r\n  const sfxWhoosh = new Audio(whooshSfx);\r\n\r\n\r\n  // if( chores.length === 0 ) {\r\n    \r\n  // }\r\n\r\n  const resolveChore = (index) => {\r\n    let array = [...choreList];\r\n    array.splice(index, 1);\r\n    setChoreList(array);\r\n    setCount(array.length);\r\n    sfxWhoosh.play();\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {choreList.map((chore, index) => {\r\n        const { id, name, day, due,  image } = chore;\r\n        return (\r\n            <div key={id} className='chore'>\r\n                <img tabIndex=\"0\" alt={name} src={image} className=\"chore-images\" />\r\n                <div>\r\n                <h4 tabIndex=\"0\">{name}</h4>\r\n                <p tabIndex=\"0\">Due: {due}</p>\r\n                <div className=\"grow\">\r\n                    <img tabIndex=\"0\" src=\"../icons/delete-button.png\" onClick={() => resolveChore(index)} className=\"remove-button\" alt=\"remove chore\" />   \r\n                </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;",{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":11,"column":20,"nodeType":"59","messageId":"60","endLine":11,"endColumn":28},{"ruleId":"61","severity":1,"message":"62","line":22,"column":72,"nodeType":"63","messageId":"64","endLine":22,"endColumn":73},{"ruleId":"65","severity":1,"message":"66","line":49,"column":8,"nodeType":"67","endLine":49,"endColumn":10,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":71,"column":35,"nodeType":"63","messageId":"71","endLine":71,"endColumn":37},{"ruleId":"72","severity":1,"message":"73","line":1,"column":1,"nodeType":"74","endLine":50,"endColumn":3},{"ruleId":"57","severity":1,"message":"75","line":26,"column":27,"nodeType":"59","messageId":"60","endLine":26,"endColumn":30},{"ruleId":"57","severity":1,"message":"58","line":11,"column":20,"nodeType":"59","messageId":"60","endLine":11,"endColumn":28},{"ruleId":"61","severity":1,"message":"62","line":22,"column":72,"nodeType":"63","messageId":"64","endLine":22,"endColumn":73},{"ruleId":"65","severity":1,"message":"66","line":49,"column":8,"nodeType":"67","endLine":49,"endColumn":10,"suggestions":"76"},{"ruleId":"69","severity":1,"message":"70","line":71,"column":35,"nodeType":"63","messageId":"71","endLine":71,"endColumn":37},{"ruleId":"72","severity":1,"message":"73","line":1,"column":1,"nodeType":"74","endLine":50,"endColumn":3},{"ruleId":"57","severity":1,"message":"75","line":26,"column":27,"nodeType":"59","messageId":"60","endLine":26,"endColumn":30},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'setChore' is assigned a value but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkChoreLoop'. Either include it or remove the dependency array.","ArrayExpression",["79"],"eqeqeq","Expected '===' and instead saw '=='.","unexpected","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'day' is assigned a value but never used.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"81","fix":"83"},"Update the dependencies array to be: [checkChoreLoop]",{"range":"84","text":"85"},{"range":"86","text":"85"},[1800,1802],"[checkChoreLoop]",[1800,1802]]