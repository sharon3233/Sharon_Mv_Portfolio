{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kindlsh\\\\Documents\\\\Projects\\\\code-linguists-chore-bot\\\\chore-bot\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Route, Link } from 'react-router-dom';\nimport data from './data';\nimport List from './List';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { AddChore } from \"./AddChore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [chores, setChore] = useState(data);\n\n  const clearAndNotify = () => {\n    toast(\"All cleared!\");\n    setChore([]);\n  }; //timer to check chore for popup reminder.\n\n\n  async function checkChoreLoop() {\n    const currentdate = new Date();\n    const datetime = currentdate.getDate() + \"/\" + (currentdate.getMonth() + 1) + \"/\" + currentdate.getFullYear() + \" @ \" + currentdate.getHours() + \":\" + currentdate.getMinutes() + \":\" + currentdate.getSeconds();\n    console.log(datetime);\n    toast(\"Clean your House\");\n  }\n\n  const MINUTE_MS = 2000;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      //TODO: add function to loop throught chore and toast when time for chore.\n      toast(\"Clean your House!\"); //checkChoreLoop();\n    }, MINUTE_MS);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          tabIndex: \"0\",\n          children: [chores.length, \" Chores Due This Week\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          chores: chores\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          tabIndex: \"0\",\n          className: \"add-chore\",\n          onClick: () => console.log(\"Clicked\"),\n          children: \"Add Chore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          tabIndex: \"0\",\n          className: \"clear-all\",\n          onClick: () => clearAndNotify(),\n          children: \"Clear all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"iHvhqw4Yn1TBkPJ3tnuzYmQWGj8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kindlsh/Documents/Projects/code-linguists-chore-bot/chore-bot/src/App.js"],"names":["React","useState","useEffect","Route","Link","data","List","ToastContainer","toast","AddChore","App","chores","setChore","clearAndNotify","checkChoreLoop","currentdate","Date","datetime","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","console","log","MINUTE_MS","interval","setInterval","clearInterval","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,KAAR,EAAeC,IAAf,QACO,kBADP;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,SAAQC,QAAR,QAAuB,YAAvB;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEX,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBX,QAAQ,CAACI,IAAD,CAAnC;;AAEA,QAAMQ,cAAc,GAAG,MAAM;AAEzBL,IAAAA,KAAK,CAAC,cAAD,CAAL;AACAI,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,GAJD,CAJW,CASX;;;AACA,iBAAeE,cAAf,GAAgC;AAC5B,UAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;AACA,UAAMC,QAAQ,GAAGF,WAAW,CAACG,OAAZ,KAAwB,GAAxB,IACFH,WAAW,CAACI,QAAZ,KAAuB,CADrB,IAC2B,GAD3B,GAEHJ,WAAW,CAACK,WAAZ,EAFG,GAEyB,KAFzB,GAGHL,WAAW,CAACM,QAAZ,EAHG,GAGsB,GAHtB,GAIHN,WAAW,CAACO,UAAZ,EAJG,GAIwB,GAJxB,GAKHP,WAAW,CAACQ,UAAZ,EALd;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ;AACAT,IAAAA,KAAK,CAAC,kBAAD,CAAL;AACH;;AACD,QAAMkB,SAAS,GAAG,IAAlB;AACAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMyB,QAAQ,GAAGC,WAAW,CAAC,MAAM;AACnC;AACEpB,MAAAA,KAAK,CAAC,mBAAD,CAAL,CAFiC,CAGjC;AACD,KAJ2B,EAIzBkB,SAJyB,CAA5B;AAMA,WAAO,MAAMG,aAAa,CAACF,QAAD,CAA1B;AACD,GARM,EAQJ,EARI,CAAT;AAWA,sBACI;AAAA,4BACI;AAAA,6BACI;AAAS,QAAA,SAAS,EAAC,WAAnB;AAAA,gCACI;AAAI,UAAA,QAAQ,EAAC,GAAb;AAAA,qBAAkBhB,MAAM,CAACmB,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,IAAD;AAAM,UAAA,MAAM,EAAEnB;AAAd;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,QAAQ,EAAC,GAAjB;AAAqB,UAAA,SAAS,EAAC,WAA/B;AAA2C,UAAA,OAAO,EAAE,MAAMa,OAAO,CAACC,GAAR,CAAY,SAAZ,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,QAAQ,EAAC,GAAjB;AAAqB,UAAA,SAAS,EAAC,WAA/B;AAA2C,UAAA,OAAO,EAAE,MAAMZ,cAAc,EAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA,6BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAeH;;GAhDQH,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {Route, Link \r\n} from 'react-router-dom'\r\nimport data from './data';\r\nimport List from './List';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {AddChore} from \"./AddChore\";\r\n\r\nfunction App() {\r\n\r\n    const [chores, setChore] = useState(data);\r\n    \r\n    const clearAndNotify = () => {\r\n        \r\n        toast(\"All cleared!\");\r\n        setChore([]);\r\n    }\r\n    //timer to check chore for popup reminder.\r\n    async function checkChoreLoop() {\r\n        const currentdate = new Date(); \r\n        const datetime = currentdate.getDate() + \"/\"\r\n                    + (currentdate.getMonth()+1)  + \"/\" \r\n                    + currentdate.getFullYear() + \" @ \"  \r\n                    + currentdate.getHours() + \":\"  \r\n                    + currentdate.getMinutes() + \":\" \r\n                    + currentdate.getSeconds();\r\n        console.log(datetime);\r\n        toast(\"Clean your House\");\r\n    } \r\n    const MINUTE_MS = 2000;\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n        //TODO: add function to loop throught chore and toast when time for chore.\r\n          toast(\"Clean your House!\");\r\n          //checkChoreLoop();\r\n        }, MINUTE_MS);\r\n      \r\n        return () => clearInterval(interval); \r\n      }, []);\r\n       \r\n\r\n    return (\r\n        <>\r\n            <main>\r\n                <section className=\"container\">\r\n                    <h3 tabIndex=\"0\">{chores.length} Chores Due This Week</h3>\r\n                    <List chores={chores} />\r\n                    <button tabIndex=\"0\" className=\"add-chore\" onClick={() => console.log(\"Clicked\")}>Add Chore</button>\r\n                    <button tabIndex=\"0\" className=\"clear-all\" onClick={() => clearAndNotify() }>Clear all</button>\r\n                </section>\r\n            </main>\r\n            <div>\r\n                <ToastContainer />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}