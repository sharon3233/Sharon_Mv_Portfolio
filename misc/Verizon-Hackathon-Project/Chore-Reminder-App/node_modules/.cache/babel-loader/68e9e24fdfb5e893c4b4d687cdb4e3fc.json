{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kindlsh\\\\Documents\\\\Projects\\\\code-linguists-chore-bot\\\\chore-bot\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport data from './data';\nimport List from './List';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport dingSfx from './sounds/servicebell.mp3';\nimport popSfx from './sounds/pop.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //States\n  const [chores, setChore] = useState(data);\n  const [count, setCount] = useState(chores.length);\n  const [addChore, setAddChore] = useState(false);\n  const sfx = new Audio(dingSfx);\n  const sfxPop = new Audio(popSfx);\n\n  const clearAndNotify = () => {\n    toast(\"All cleared!\");\n    sfxPop.play();\n    setChore([]);\n  }; //Toast/Timer\n  //timer function to check chore for popup reminder.\n\n\n  async function checkChoreLoop() {\n    //get Date and time\n    const today = new Date();\n    const time = today.getHours() + \":\" + today.getMinutes() + \":\" + \"00\";\n    const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    console.log(time + \":\" + date); //loop through chore due dates and check for a date time match`\n\n    for (const chore in data) {\n      //format time and check for match and toast if there is match\n      if (time + \":\" + date === data[chore].due) {\n        //Sound Effect load and play when match found\n        sfx.play();\n        toast(data[chore].name);\n      }\n    }\n  } //set timer interval 60000 = 1min  \n\n\n  const MINUTE_MS = 10000;\n  useEffect(() => {\n    const interval = setInterval(() => {\n      //Call function ever timer interval\n      checkChoreLoop();\n    }, MINUTE_MS);\n    return () => clearInterval(interval);\n  }, []); //Download/Load JSON\n  //Function to download chores as json file\n\n  function download(content, fileName, contentType) {\n    toast(\"Downloading List\");\n    sfxPop.play();\n    const a = document.createElement(\"a\");\n    const file = new Blob([content], {\n      type: contentType\n    });\n    a.href = URL.createObjectURL(file);\n    a.download = fileName;\n    a.click();\n  } //Add Chore\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setAddChore(false);\n    console.log(`the chore entered was ${e.target[0].value}`);\n    e.target.reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [!chores.length ? chores.length : count, \" Chores Due This Week\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          chores: chores,\n          setCount: setCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          tabIndex: \"0\",\n          className: \"add-chore\",\n          onClick: () => setAddChore(!addChore),\n          children: \"Add Chore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          tabIndex: \"0\",\n          className: \"download-chore\",\n          onClick: () => download(JSON.stringify(data), 'chore.json', 'text/plain'),\n          children: \"Download Chore list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          tabIndex: \"0\",\n          className: \"clear-all\",\n          onClick: () => clearAndNotify(),\n          children: \"Clear all\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), \"                    \", /*#__PURE__*/_jsxDEV(\"img\", {\n          tabIndex: \"0\",\n          id: \"dust\",\n          src: \"Images/dust.gif\",\n          alt: \"pink rabbit dusting gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 136\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: {\n          visibility: addChore ? 'visible' : 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"choreName\",\n          placeholder: \"chore\",\n          type: \"text\",\n          title: \"Chore Name\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"choreDate\",\n          type: \"date\",\n          title: \"Chore due date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"choreTime\",\n          placeholder: \"HH:00\",\n          required: true,\n          pattern: \"^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$\",\n          title: \"Chore Time: 24 Hour Time Clock\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"choreImage\",\n          placeholder: \"http://\",\n          title: \"not required default image will be applied if none is added\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          title: \"submit chore\",\n          children: \"Add Chore\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"A5XoVpdq+1tAZktBzxunhIupJjs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/kindlsh/Documents/Projects/code-linguists-chore-bot/chore-bot/src/App.js"],"names":["React","useState","useEffect","data","List","ToastContainer","toast","dingSfx","popSfx","App","chores","setChore","count","setCount","length","addChore","setAddChore","sfx","Audio","sfxPop","clearAndNotify","play","checkChoreLoop","today","Date","time","getHours","getMinutes","date","getFullYear","getMonth","getDate","console","log","chore","due","name","MINUTE_MS","interval","setInterval","clearInterval","download","content","fileName","contentType","a","document","createElement","file","Blob","type","href","URL","createObjectURL","click","handleSubmit","e","preventDefault","target","value","reset","JSON","stringify","visibility"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport data from './data';\r\nimport List from './List';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport dingSfx from './sounds/servicebell.mp3';\r\nimport popSfx from './sounds/pop.mp3';\r\n\r\nfunction App()   {\r\n    //States\r\n    const [chores, setChore] = useState(data);\r\n    const [count, setCount] = useState(chores.length);\r\n    const [addChore, setAddChore] = useState(false); \r\n    const sfx = new Audio(dingSfx);\r\n    const sfxPop = new Audio(popSfx);\r\n\r\n    \r\n    const clearAndNotify = () => {\r\n        toast(\"All cleared!\");\r\n        sfxPop.play();\r\n        setChore([]);\r\n    }\r\n\r\n    //Toast/Timer\r\n    //timer function to check chore for popup reminder.\r\n    async function checkChoreLoop() {\r\n        //get Date and time\r\n        const today = new Date();\r\n        const time = today.getHours() + \":\" + today.getMinutes() + \":\" + \"00\";\r\n        const date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\r\n        console.log((time+\":\"+date));\r\n        //loop through chore due dates and check for a date time match`\r\n        for(const chore in data){\r\n            //format time and check for match and toast if there is match\r\n            if((time+\":\"+date) === data[chore].due){\r\n                //Sound Effect load and play when match found\r\n                sfx.play();\r\n                toast(data[chore].name);\r\n            }\r\n        }\r\n    }\r\n    //set timer interval 60000 = 1min  \r\n    const MINUTE_MS = 10000;\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n          //Call function ever timer interval\r\n            checkChoreLoop();\r\n        }, MINUTE_MS);\r\n        return () => clearInterval(interval); \r\n    }, []);\r\n\r\n      //Download/Load JSON\r\n      //Function to download chores as json file\r\n    function download(content, fileName, contentType) {\r\n        toast(\"Downloading List\");\r\n        sfxPop.play();\r\n        const a = document.createElement(\"a\");\r\n        const file = new Blob([content], {type: contentType});\r\n        a.href = URL.createObjectURL(file);\r\n        a.download = fileName;\r\n        a.click();\r\n    }\r\n    \r\n    //Add Chore\r\n       const handleSubmit = (e) => {\r\n            e.preventDefault();\r\n            setAddChore(false);\r\n            console.log(`the chore entered was ${e.target[0].value}`);\r\n            e.target.reset();\r\n        };\r\n\r\n    return (\r\n        <>\r\n            <main>\r\n                <section className=\"container\">\r\n                <h3>{!chores.length ? chores.length: count} Chores Due This Week</h3>\r\n                <List chores={chores} setCount={setCount}/>\r\n                    <button tabIndex=\"0\" className=\"add-chore\" onClick={() => setAddChore(!addChore)}>Add Chore</button>\r\n                    <br/>\r\n                    <button tabIndex=\"0\" className=\"download-chore\" onClick={() => download(JSON.stringify(data), 'chore.json', 'text/plain')}>Download Chore list</button>\r\n                    <button tabIndex=\"0\" className=\"clear-all\" onClick={() => clearAndNotify() }>Clear all</button>                    <img tabIndex=\"0\" id=\"dust\" src=\"Images/dust.gif\" alt=\"pink rabbit dusting gif\"/>\r\n                </section>\r\n                <form  onSubmit={handleSubmit} style={{visibility: addChore ? 'visible': 'hidden',}}>\r\n                <input id=\"choreName\" placeholder=\"chore\" type=\"text\" title=\"Chore Name\" required/>\r\n                <input id=\"choreDate\" type=\"date\" title=\"Chore due date\"/>\r\n                <input id=\"choreTime\" placeholder=\"HH:00\" required pattern=\"^([0-1]?[0-9]|2[0-4]):([0-5][0-9])(:[0-5][0-9])?$\" title=\"Chore Time: 24 Hour Time Clock\"/>\r\n                <input id=\"choreImage\" placeholder=\"http://\" title=\"not required default image will be applied if none is added\"/>\r\n                <button type=\"submit\" title=\"submit chore\">Add Chore</button>\r\n                </form>\r\n            </main>\r\n            <div>\r\n                <ToastContainer />\r\n            </div>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}